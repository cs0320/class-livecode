<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Having configuration live outside the code can be very useful.
         For one, it's a lot easier to parse and analyze something like this than
         if the project configuration lived in arbitrary Java code!

         Nevertheless, these configuration formats can be a lot of work to understand
         at first. Give them time, and learn what you need to learn as you go, not all at once. -->

    <!-- This is a comment, just like in HTML. -->

    <!-- All the "xmlns" stuff above is mostly saying how to interpret this file, which version of
         the format is being used, and so on. Ignore all that for now. :-) -->

    <!-- This defines more metadata for the project: a name, a version, etc.  -->
    <groupId>edu.brown.cs32</groupId>
    <artifactId>jan25-generics</artifactId>
    <version>1.0</version>

    <!-- The dependencies part of the POM file says which packages our project depends on.
        Here, we rely on JUnit 5 (which is named unhelpfully...)

        Watch out: don't mix multiple versions of JUnit! -->
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- This plugin helps integrate Maven with JUnit5; without it, testing might not work properly.  -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
        </plugins>
    </build>

    <!-- Declare which version of Java this project should use. Java 17 is a long-term-support
    version, but as of January 2025 is very close to end of support. We'll want to update soon,
    but not this semester. -->
    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

</project>